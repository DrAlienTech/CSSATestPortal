rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function userAllowed(event) {
      return
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.event1 == event
      || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.event2 == event
      || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.event3 == event
      || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.event4 == event;
    }
    
    match /tests/{test} {
      allow read: if request.auth != null && userAllowed(test);
      allow write: if false;
    }
    
    match /tests/{test}/questions/{question} {
    	allow read: if request.auth != null;
    	allow write: if false;
    }
    
    match /keys/{key} {
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }
    
    match /users/{user} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    match /users/{user}/answers/{event} {
    	allow read, write: if request.auth != null && request.auth.uid == user
    }
  }
}